#! /bin/sh

#  This file is part of gnu-pw-mgr.
#
#  Copyright (C) 2013-2018 Bruce Korb - all rights reserved
#
#  gnu-pw-mgr is free software: you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  gnu-pw-mgr is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program.  If not, see <http://www.gnu.org/licenses/>.

readonly testname=`basename $0`
set -x

. "${srcdir}/test.funs"

ck_test() {
    cat "${TEST_HOME}/.local/gnupwmgr.cfg"
    for f
    do
        ct=`grep -F "$f" "${TEST_HOME}/.local/gnupwmgr.cfg" | wc -l` || \
            die "'$f' not found in ${TEST_HOME}/.local/gnupwmgr.cfg"
        test $ct -eq 1 || {
            die "$ct '$f'-s in ${TEST_HOME}/.local/gnupwmgr.cfg"
	}
    done
}

noisy_death() {
  printf "DEATH by $*\n\n%s\n" "$(eval "$cmd")"
  mv $TEST_HOME ${TEST_HOME}-DEAD
  die "$@"
}

run_test() {
    set -e
    cfgfile="${TEST_HOME}/.local/gnupwmgr.cfg"
    $gpw -t 'TEST ONLY TAG' --text \
        'This is only a test.  Were it real, you would likely know.  It is not.'
    test -f "${cfgfile}" || \
        die "config file not created:  ${TEST_HOME}/.local/gnupwmgr.cfg"
    ck_test 'TEST ONLY TAG'

    samp='JvyFIc2bRvUPRDCK'
    cmd="$gpw --rehash=1 -i 'test-tag' who"
    f=`eval "$cmd" | awk '/TEST ONLY TAG/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death $'passwords differ\n'"$samp became $f"$'\n\n'"$(eval "$cmd")"
    ck_test 'TEST ONLY TAG' "login-id  = 'test-tag'"

    # Confirmation question test
    #
    samp='jfiscesagqka'
    cmd="$gpw --confirm dog who"
    f=`eval "$cmd" | awk '/TEST ONLY TAG/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death $'results for "--confirm dog" differ\n'"'$samp' became '$f'"

    samp='uvflfqdrjepf'
    cmd="$gpw --confirm pet who"
    f=`eval "$cmd" | awk '/TEST ONLY TAG/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death $'results for "--confirm pet" differ\n'"$samp became $f"

    # Triplet fixup test
    #
    trial='try 85'
    samp='2Tjzv7jAvnZf2J5eaEoIFLn+8E3UNGPmGJ0uuu3K'
    cmd="$gpw --rehash=1 -l40 $trial"
    f=`eval "$cmd" | awk '/uuu/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death "wrong password found"
    samp=`echo "$samp" | sed 's/uuu/uuv/'`

    cmd="$gpw --cclass no-trip $trial"
    f=`eval "$cmd" | awk '/uuv/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death "wrong tweaked password found"

    # selective chars fixup test
    # test "X$f" = "X${samp:23:1}${samp:15:1}${samp:7:1}${samp:2:1}" 
    #
    cmd="$gpw --sel=24,16,8,3 $trial"
    f=`eval "$cmd" | awk '/TEST ONLY/{print $4}'`
    test "X$f" = "X+eAj" || \
        noisy_death "selection inconsistency"

    samp=lMZ0FiVY
    cmd="$gpw --cc=two-digit $trial 2"
    f=`eval "$cmd" | awk '/TEST ONLY/{print $4}'`
    test "X$f" = "X$samp" && \
        noisy_death "requiring two digits failed"

    # Sequential fixup test
    #
    trial='XX try 10185'
    samp='3AOS5o5011OuzGYlFrLI4B2FGHopslkngfRTdIHi'
    cmd="$gpw -l40 --cc=no-spec $trial"
    f=`eval "$cmd" | awk '/TEST ONLY/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death "Pt. 1 PBKDF2 inconsistency"

    samp=$(echo $samp | sed 's/FGH/FKH/')
    cmd="$gpw --cc=no-spec+no-seq $trial"
    f=`eval "$cmd" | awk '/TEST ONLY/{print $4}'`
    test "X$f" = "X$samp" || \
        noisy_death "Pt. 2 PBKDF2 inconsistency"

    $gpw -t 'TEST ONLY TAG'
    test -f "${cfgfile}" || \
        noisy_death "config file removed:  ${TEST_HOME}/.local/gnupwmgr.cfg"
    grep -F 'TEST ONLY TAG'  "${cfgfile}" && \
        noisy_death "'TEST ONLY TAG' seed remains in config file"

    set +e
}

init_test
trap die 0
run_test
trap '' 0
cleanup
exit 0

# Local Variables:
# mode:shell-script
# sh-indentation:4
# sh-basic-offset:4
# indent-tabs-mode: nil
# End:

# base.test ends here
