
@node Quick Start
@chapter Getting Started Quickly
@ignore

This file is part of gnu-pw-mgr.
Copyright (C) 2013-2020 Bruce Korb, all rights reserved.
This is free software. It is licensed for use, modification and
redistribution under the terms of the GNU General Public License,
version 3 or later <http://gnu.org/licenses/gpl.html>

gnu-pw-mgr is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

gnu-pw-mgr is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.

xx* aa::        A A
xx@node aa
xx@section A A

@end ignore

To use the program you must first initialize a configuration file with a "salt".
At the moment, it is a command line only, meaning you need to start a
"terminal" session. The backslash continues the command line and the
quoted string continues it:

@example
$ gnu-pw-mgr -t new-pw -s \
"Peter Piper picked a peck of pickled peppers.
If Peter Piper picked a peck of pickled peppers,
how many peppers did Peter Piper pick?"
@end example

This will yield a configuration file that contains this text:

@example
<seed>
 <tag>new-pw</tag><ver type=integer>2104320</ver>
 <text>Peter Piper picked a peck of pickled peppers.
If Peter Piper picked a peck of pickled peppers,
how many peppers did Peter Piper pick?</text>
</seed>
<program per_pw_id>
@end example

Now you can create passwords.

@example
$ gnu-pw-mgr /nytimes.com/

seed-tag     password:   (pw undated)
new-pw       aEv2Gt48FJalbNo4
@end example

@menu
* password attributes::         Adjusting Passwords to Requirements
* default attribute::           Changing the default character class
@end menu

@node password attributes
@section Adjusting Passwords to Requirements

By default, passwords are 16 characters long, rehashed 10007 times, and
have the following formation constraints:

@itemize
@item
at least one alphabetic character
@item
at least one digit
@end itemize

This means it may or may not have a special character and there's no
prohibition on triple characters or three in a sequence.
Unfortunately, there is a very wide variety of attributes to what
makes an acceptable password. If, for example, you want all your
password to have at least one lower case letter, an upper case letter,
a digit, some special character and never have three of the same
character in a row, it can be specified as follows:

@example
$ gnu-pw-mgr --cclass='=upper,lower,digit,spec,no-trip' /nytimes.com/                     

seed-tag     password:   (pw undated)
new-pw       aEv2Gt48FJalbNo/
@end example

and now the last character of the password is a '/'.
This will cause an entry to be stored for this password, so the config
file will now contain:

@example
<seed>
 <tag>new-pw</tag><ver type=integer>2104320</ver>
 <text>Peter Piper picked a peck of pickled peppers.
If Peter Piper picked a peck of pickled peppers,
how many peppers did Peter Piper pick?</text>
</seed>
<program per_pw_id>
<pwtag id="Ps3l...F">cclass = =upper+lower+digit+special+no-triplets</pwtag>
<pwtag id="Ps3l...F" date="18533">use-pbkdf2 = 10007</pwtag>
@end example

The remaining password attributes may be changed as well,
see @ref{gnu-pw-mgr password-options,,the password attributes options}.
These are all retained for the next time the same password id is specified.

@emph{Note:} the attributes are retained by hashing the password id
and taking the first 24 characters of that hash. For example,
the "@samp{/nytimes.com/}" string hashes to the "@samp{Ps3l...F}"
string (abbreviated here). But, obviously, there is no way to derive the
"@samp{/nytimes.com/}" string from that partial hash.  So, the
next time you need the password, the "@samp{Ps3l...F}" will be re-created to
find the password attributes, such as length, rehash count ("pbkdf2"),
and any alternate special characters. See @pxref{gnu-pw-mgr
password-options}.  for all the ways passwords can be adjusted
(consistently) to pass muster with login restrictions.

Also (hint): the "login-id" option is useful to remind you of either
of two things: an alternate domain name for web sites that use
multiple domains with a unified login.  It can be used to remind you
of the login name you need for the particular site (e.g. which email
address or which user name you've chosen). That attribute does not modify
the resulting password in any way.

@node default attribute
@section hanging the default character class

If you are not specifying a password id, you may specify the set of
default character classes for new passwords. The @ref{gnu-pw-mgr seed-options,,
-\-default-cclass option} will record a new default set of character classes
to be used for new password ids. It will place the information in the
global portion (above the ``<program per_pw_id>'' tag). For example:

@example
<default_cclass>upper,lower,digit,no-special,no-triplets</default_cclass>
@end example

The meanings of these classes are described in the @ref{gnu-pw-mgr password-options,,
-\-cclass option} description.
